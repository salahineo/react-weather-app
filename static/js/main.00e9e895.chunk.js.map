{"version":3,"sources":["Components/Form/Form.js","Components/Weather/Weather.js","Components/Footer/Footer.js","App.js","index.js"],"names":["Form","this","props","getCountries","cities","countries","getCities","getWeather","className","onSubmit","name","id","onChange","e","target","value","nextElementSibling","removeAttribute","map","country","index","disabled","city","type","React","Component","Weather","weather_temperature","weather_description","weather_humidity","weather_clouds","weather_wind_speed","style","transform","weather_sunrise","weather_sunset","Footer","footer_copyright_year","Date","String","getFullYear","href","rel","require","API_Key","App","state","weather_pressure","weather_wind_degree","tempArray","i","length","push","setState","toggleColorMode","document","documentElement","setAttribute","a","preventDefault","cityID","elements","fetch","data","json","readableData","sunriseTime","sys","sunrise","sunsetTime","sunset","toLocaleString","split","weather","description","Math","round","main","temp","pressure","humidity","clouds","all","wind","speed","deg","Fragment","ReactDOM","render","StrictMode","getElementById"],"mappings":"wl0/oBAmDeA,E,uKA7Cb,WAEEC,KAAKC,MAAMC,iB,oBAIb,WAAS,MAE0CF,KAAKC,MAAjDE,EAFE,EAEFA,OAAQC,EAFN,EAEMA,UAAWC,EAFjB,EAEiBA,UAAWC,EAF5B,EAE4BA,WACnC,OACE,qBAAKC,UAAU,OAAf,SACE,uBAAMC,SAAUF,EAAhB,UACE,yBAAQG,KAAK,YAAYC,GAAG,YAAYC,SAAU,SAACC,GAEjDP,EAAUO,EAAEC,OAAOC,OAEnBF,EAAEC,OAAOE,mBAAmBC,gBAAgB,YAE5CJ,EAAEC,OAAOE,mBAAmBA,mBAAmBC,gBAAgB,aANjE,UAQE,0DAEEZ,EAAUa,KAAI,SAACC,EAASC,GACtB,OACE,wBAAoBL,MAAOI,EAAQR,GAAnC,SAAwCQ,EAAQT,MAAnCU,SAKrB,wBAAQV,KAAK,SAASC,GAAG,SAASU,UAAQ,EAA1C,SAEIjB,EAAOc,KAAI,SAACI,EAAMF,GAChB,OACE,wBAAoBL,MAAOO,EAAKX,GAAhC,SAAqCW,EAAKZ,MAA7BU,QAKrB,wBAAQG,KAAK,SAASF,UAAQ,EAA9B,kC,GAzCSG,IAAMC,WCqCVC,G,MArCC,SAACxB,GACf,OACE,sBAAKM,UAAU,UAAf,UACE,qBAAKA,UAAU,cAAf,SACGN,EAAMyB,qBAAuB,iCAAOzB,EAAMyB,oBAAb,cAEhC,qBAAKnB,UAAU,cAAf,SACGN,EAAM0B,qBAAuB,+BAAO1B,EAAM0B,wBAE7C,sBAAKpB,UAAU,kBAAf,UACE,sBAAMA,UAAU,WAAhB,SACGN,EAAM2B,kBACP,uBAAMrB,UAAU,OAAhB,UAAuB,mBAAGA,UAAU,gBAApC,IAAqD,sBAAMA,UAAU,OAAhB,sBAArD,IAA4F,uBAAMA,UAAU,QAAhB,UAAyBN,EAAM2B,iBAA/B,YAE9F,sBAAMrB,UAAU,SAAhB,SAC4B,KAAzBN,EAAM4B,gBACP,uBAAMtB,UAAU,OAAhB,UAAuB,mBAAGA,UAAU,iBAApC,IAAsD,sBAAMA,UAAU,OAAhB,oBAAtD,IAA2F,uBAAMA,UAAU,QAAhB,UAAyBN,EAAM4B,eAA/B,YAE7F,sBAAMtB,UAAU,OAAhB,SACGN,EAAM6B,oBACP,uBAAMvB,UAAU,OAAhB,UAAuB,mBAAGA,UAAU,gBAApC,IAAqD,sBAAMA,UAAU,OAAhB,kBAArD,IAAwF,uBAAMA,UAAU,QAAhB,UAAyBN,EAAM6B,mBACrH,mBAAGvB,UAAU,wCACVwB,MAAO,CAACC,UAAU,UAAD,OAAuC,IAA3B/B,EAAM6B,mBAAlB,mBAExB,sBAAMvB,UAAU,UAAhB,SACGN,EAAMgC,iBACP,uBAAM1B,UAAU,OAAhB,UAAuB,mBAAGA,UAAU,eAApC,IAAoD,sBAAMA,UAAU,OAAhB,qBAApD,IAA0F,sBAAMA,UAAU,QAAhB,SAAyBN,EAAMgC,uBAE3H,sBAAM1B,UAAU,SAAhB,SACGN,EAAMiC,gBACP,uBAAM3B,UAAU,OAAhB,UAAuB,mBAAGA,UAAU,gBAApC,IAAqD,sBAAMA,UAAU,OAAhB,oBAArD,IAA0F,sBAAMA,UAAU,QAAhB,SAAyBN,EAAMiC,8BCIpHC,G,MAnCA,WAEb,IAAIC,EAAwB,IAAIC,KAEhC,OACE,wBAAQ9B,UAAU,SAAlB,SACE,sBAAKA,UAAU,mBAAf,UACE,sBAAKA,UAAU,YAAf,kBACI,+BAAO+B,OAAOF,EAAsBG,iBADxC,MACiE,sBAAMhC,UAAU,SAAhB,8BAEjE,sBAAKA,UAAU,QAAf,UACE,mBAAGiC,KAAK,+BAA+B3B,OAAO,SAAS4B,IAAI,aAA3D,SACE,mBAAGlC,UAAU,oBAEf,mBAAGiC,KAAK,yCAAyC3B,OAAO,SAAS4B,IAAI,aAArE,SACE,mBAAGlC,UAAU,yBAEf,mBAAGiC,KAAK,gCAAgC3B,OAAO,SAAS4B,IAAI,aAA5D,SACE,mBAAGlC,UAAU,qBAEf,mBAAGiC,KAAK,sCAAsC3B,OAAO,SAAS4B,IAAI,aAAlE,SACE,mBAAGlC,UAAU,wBAEf,mBAAGiC,KAAK,yCAAyC3B,OAAO,SAAS4B,IAAI,aAArE,SACE,mBAAGlC,UAAU,0BAEf,mBAAGiC,KAAK,kCAAkC3B,OAAO,SAAS4B,IAAI,aAA9D,SACE,mBAAGlC,UAAU,gCCrBnBJ,EAASuC,EAAQ,IACjBtC,EAAYsC,EAAQ,IAGpBC,EAAU,mCAmIDC,E,4MA9HbC,MAAQ,CACNzC,UAAW,GACXD,OAAQ,GACRwB,oBAAqB,GACrBD,oBAAqB,GACrBoB,iBAAkB,GAClBlB,iBAAkB,GAClBC,eAAgB,GAChBC,mBAAoB,GACpBiB,oBAAqB,GACrBd,gBAAiB,GACjBC,eAAgB,I,EAKlBhC,aAAe,WAIb,IAFA,IAAI8C,EAAY,GAEPC,EAAI,EAAGA,EAAI7C,EAAU8C,OAAQD,IAEpCD,EAAUG,KAAK/C,EAAU6C,IAG3B,EAAKG,SAAS,CACZhD,UAAW4C,K,EAKf3C,UAAY,SAACa,GAIX,IAFA,IAAI8B,EAAY,GAEPC,EAAI,EAAGA,EAAI9C,EAAO+C,OAAQD,IAE7B9C,EAAO8C,GAAG/B,UAAYA,GAExB8B,EAAUG,KAAK,CAAC1C,KAAMN,EAAO8C,GAAGxC,KAAMC,GAAIP,EAAO8C,GAAGvC,KAIxD,EAAK0C,SAAS,CACZjD,OAAQ6C,K,EAKZK,gBAAkB,WAAM,IAEjB3B,EAAuB,EAAKmB,MAA5BnB,oBACuB,KAAxBA,EAEF4B,SAASC,gBAAgBC,aAAa,aAAc,QAC3C9B,EAAsB,GAE/B4B,SAASC,gBAAgBC,aAAa,aAAc,QAGpDF,SAASC,gBAAgBC,aAAa,aAAc,S,EAKxDlD,W,uCAAa,WAAOM,GAAP,2BAAA6C,EAAA,6DAEX7C,EAAE8C,iBAEEC,EAAS/C,EAAEC,OAAO+C,SAASzD,OAAOW,MAJ3B,SAMQ+C,MAAM,qDAAD,OAAsDF,EAAtD,+BAAmFhB,IANhG,cAMLmB,EANK,gBAQgBA,EAAKC,OARrB,cAQLC,EARK,OAULC,EAAc,IAAI5B,KAAgC,IAA3B2B,EAAaE,IAAIC,SACxCC,EAAa,IAAI/B,KAA+B,IAA1B2B,EAAaE,IAAIG,QACzCF,EAAUF,EAAYK,eAAe,SAASC,MAAM,MAAM,GAC1DF,EAASD,EAAWE,eAAe,SAASC,MAAM,MAAM,GAI5D,EAAKnB,SAAS,CACZzB,oBAAqBqC,EAAaQ,QAAQ,GAAGC,YAC7C/C,oBAAqBgD,KAAKC,MAAMX,EAAaY,KAAKC,MAClD/B,iBAAkBkB,EAAaY,KAAKE,SACpClD,iBAAkBoC,EAAaY,KAAKG,SACpClD,eAAgBmC,EAAagB,OAAOC,IACpCnD,mBAAoBkC,EAAakB,KAAKC,MACtCpC,oBAAqBiB,EAAakB,KAAKE,IACvCnD,gBAAiBkC,EACjBjC,eAAgBmC,IA1BP,UA6BL,EAAKhB,kBA7BA,4C,kGAiCb,WACE,OACE,eAAC,IAAMgC,SAAP,WACE,qBAAK9E,UAAU,MAAf,SACE,iCACE,gDACA,cAAC,EAAD,CAAMJ,OAAQH,KAAK6C,MAAM1C,OACnBC,UAAWJ,KAAK6C,MAAMzC,UACtBC,UAAWL,KAAKK,UAChBH,aAAcF,KAAKE,aACnBI,WAAYN,KAAKM,aACvB,cAAC,EAAD,CAASqB,oBAAqB3B,KAAK6C,MAAMlB,oBAChCD,oBAAqB1B,KAAK6C,MAAMnB,oBAChCoB,iBAAkB9C,KAAK6C,MAAMC,iBAC7BlB,iBAAkB5B,KAAK6C,MAAMjB,iBAC7BC,eAAgB7B,KAAK6C,MAAMhB,eAC3BC,mBAAoB9B,KAAK6C,MAAMf,mBAC/BiB,oBAAqB/C,KAAK6C,MAAME,oBAChCd,gBAAiBjC,KAAK6C,MAAMZ,gBAC5BC,eAAgBlC,KAAK6C,MAAMX,sBAGxC,cAAC,EAAD,W,GA3HUX,IAAMC,WCTxB8D,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFlC,SAASmC,eAAe,W","file":"static/js/main.00e9e895.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Form.css\";\n\nclass Form extends React.Component {\n\n  // Component Did Mount Method\n  componentDidMount() {\n    // Load Countries After Component Load\n    this.props.getCountries();\n  }\n\n  // Render Method\n  render() {\n    // Get Props\n    let {cities, countries, getCities, getWeather} = this.props;\n    return (\n      <div className=\"form\">\n        <form onSubmit={getWeather}>\n          <select name=\"countries\" id=\"countries\" onChange={(e) => {\n            // Get Cities Of Selected Country\n            getCities(e.target.value);\n            // Unlock Cities Select\n            e.target.nextElementSibling.removeAttribute(\"disabled\");\n            // Unlock Button Click\n            e.target.nextElementSibling.nextElementSibling.removeAttribute(\"disabled\");\n          }}>\n            <option>-- Select Country --</option>\n            {\n              countries.map((country, index) => {\n                return (\n                  <option key={index} value={country.id}>{country.name}</option>\n                );\n              })\n            }\n          </select>\n          <select name=\"cities\" id=\"cities\" disabled>\n            {\n              cities.map((city, index) => {\n                return (\n                  <option key={index} value={city.id}>{city.name}</option>\n                );\n              })\n            }\n          </select>\n          <button type=\"submit\" disabled>Get Weather</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Form;\n","import React from \"react\";\nimport \"./Weather.css\";\n\nconst Weather = (props) => {\n  return (\n    <div className=\"weather\">\n      <div className=\"temperature\">\n        {props.weather_temperature && <span>{props.weather_temperature}° C</span>}\n      </div>\n      <div className=\"description\">\n        {props.weather_description && <span>{props.weather_description}</span>}\n      </div>\n      <div className=\"additional-info\">\n        <span className=\"humidity\">\n          {props.weather_humidity &&\n          <span className=\"info\"><i className=\"fas fa-tint\" /> <span className=\"name\">Humidity</span> <span className=\"value\">{props.weather_humidity}%</span></span>}\n        </span>\n        <span className=\"clouds\">\n          {props.weather_clouds !== \"\" &&\n          <span className=\"info\"><i className=\"fas fa-cloud\" /> <span className=\"name\">Clouds</span> <span className=\"value\">{props.weather_clouds}%</span></span>}\n        </span>\n        <span className=\"wind\">\n          {props.weather_wind_speed &&\n          <span className=\"info\"><i className=\"fas fa-wind\" /> <span className=\"name\">Wind</span> <span className=\"value\">{props.weather_wind_speed}\n            <i className=\"fas fa-long-arrow-alt-up fa-rotate-90\"\n               style={{transform: `rotate(${props.weather_wind_speed * 100}deg)`}} /></span></span>}\n        </span>\n        <span className=\"sunrise\">\n          {props.weather_sunrise &&\n          <span className=\"info\"><i className=\"fas fa-sun\" /> <span className=\"name\">Sunrise</span> <span className=\"value\">{props.weather_sunrise}</span></span>}\n        </span>\n        <span className=\"sunset\">\n          {props.weather_sunset &&\n          <span className=\"info\"><i className=\"fas fa-moon\" /> <span className=\"name\">Sunset</span> <span className=\"value\">{props.weather_sunset}</span></span>}\n        </span>\n      </div>\n    </div>\n  );\n};\n\nexport default Weather;\n","import \"./Footer.css\";\n\nconst Footer = () => {\n  // Get Current Year For Copyright\n  let footer_copyright_year = new Date();\n\n  return (\n    <footer className=\"footer\">\n      <div className=\"footer-container\">\n        <div className=\"copyright\">\n          © <span>{String(footer_copyright_year.getFullYear())}</span> | <span className=\"author\">Mohamed Salah</span>\n        </div>\n        <div className=\"links\">\n          <a href=\"https://github.com/salahineo\" target=\"_blank\" rel=\"noreferrer\">\n            <i className=\"fab fa-github\" />\n          </a>\n          <a href=\"https://www.linkedin.com/in/salahineo/\" target=\"_blank\" rel=\"noreferrer\">\n            <i className=\"fab fa-linkedin-in\" />\n          </a>\n          <a href=\"https://twitter.com/salahineo\" target=\"_blank\" rel=\"noreferrer\">\n            <i className=\"fab fa-twitter\" />\n          </a>\n          <a href=\"https://www.facebook.com/salahineo/\" target=\"_blank\" rel=\"noreferrer\">\n            <i className=\"fab fa-facebook-f\" />\n          </a>\n          <a href=\"https://salahineo.github.io/salahineo/\" target=\"_blank\" rel=\"noreferrer\">\n            <i className=\"fas fa-globe-africa\" />\n          </a>\n          <a href=\"mailto:salahineo.work@gmail.com\" target=\"_blank\" rel=\"noreferrer\">\n            <i className=\"fas fa-envelope\" />\n          </a>\n        </div>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport \"./App.css\";\nimport \"./assets/css/font-awesome/css/fontawesome.css\";\nimport Form from \"./Components/Form/Form\";\nimport Weather from \"./Components/Weather/Weather\";\nimport Footer from \"./Components/Footer/Footer\";\n\n// Require Countries & Cities Data\nconst cities = require(\"./Data/cities.json\");\nconst countries = require(\"./Data/countries.json\");\n\n// OpenWeatherMap [Personal] API Key\nconst API_Key = \"d2b8ce582dda5538a8f06a810447abc7\";\n\nclass App extends React.Component {\n\n  // State Data\n  state = {\n    countries: [],\n    cities: [],\n    weather_description: \"\",\n    weather_temperature: \"\",\n    weather_pressure: \"\",\n    weather_humidity: \"\",\n    weather_clouds: \"\",\n    weather_wind_speed: \"\",\n    weather_wind_degree: \"\",\n    weather_sunrise: \"\",\n    weather_sunset: \"\"\n  };\n\n\n  // Get List Of Countries\n  getCountries = () => {\n    // Temporary Array\n    let tempArray = [];\n    // Loop Through Countries JSON File\n    for (let i = 0; i < countries.length; i++) {\n      // Push Current Country To Array\n      tempArray.push(countries[i]);\n    }\n    // Update Data State\n    this.setState({\n      countries: tempArray\n    });\n  };\n\n  // Get List Of Data For Specific Country\n  getCities = (country) => {\n    // Temporary Array\n    let tempArray = [];\n    // Loop Through JSON File\n    for (let i = 0; i < cities.length; i++) {\n      // Check Country\n      if (cities[i].country === country) {\n        // Push Country Data To Temporary Array As Object With Value And ID\n        tempArray.push({name: cities[i].name, id: cities[i].id});\n      }\n    }\n    // Update Data State\n    this.setState({\n      cities: tempArray\n    });\n  };\n\n  // Toggle Color Mode\n  toggleColorMode = () => {\n    // Get Temperature From State\n    let {weather_temperature} = this.state;\n    if (weather_temperature === \"\") {\n      // Temperature Is Empty\n      document.documentElement.setAttribute(\"data-theme\", \"cold\");\n    } else if (weather_temperature > 18) {\n      // Temperature > 18\n      document.documentElement.setAttribute(\"data-theme\", \"warm\");\n    } else {\n      // Temperature < 18\n      document.documentElement.setAttribute(\"data-theme\", \"cold\");\n    }\n  };\n\n  // Get Weather Method\n  getWeather = async (e) => {\n    // Prevent Form Reloading\n    e.preventDefault();\n    // Get Selected City ID\n    let cityID = e.target.elements.cities.value;\n    // Fetch API Data For This City\n    const data = await fetch(`http://api.openweathermap.org/data/2.5/weather?id=${cityID}&units=metric&appid=${API_Key}`);\n    // Convert Data To JSON\n    const readableData = await data.json();\n    // Sunrise Convert To Readable Date\n    const sunriseTime = new Date(readableData.sys.sunrise * 1000);\n    const sunsetTime = new Date(readableData.sys.sunset * 1000);\n    let sunrise = sunriseTime.toLocaleString(\"en-US\").split(\", \")[1];\n    let sunset = sunsetTime.toLocaleString(\"en-US\").split(\", \")[1];\n    //console.log(readableData.wind.deg * 100);\n\n    // Set Weather Data To State\n    this.setState({\n      weather_description: readableData.weather[0].description,\n      weather_temperature: Math.round(readableData.main.temp),\n      weather_pressure: readableData.main.pressure,\n      weather_humidity: readableData.main.humidity,\n      weather_clouds: readableData.clouds.all,\n      weather_wind_speed: readableData.wind.speed,\n      weather_wind_degree: readableData.wind.deg,\n      weather_sunrise: sunrise,\n      weather_sunset: sunset\n    });\n    // Toggle Color Mode Depend On Temperature\n    await this.toggleColorMode();\n  };\n\n  // Render Method\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"App\">\n          <main>\n            <h2>Choose Country</h2>\n            <Form cities={this.state.cities}\n                  countries={this.state.countries}\n                  getCities={this.getCities}\n                  getCountries={this.getCountries}\n                  getWeather={this.getWeather} />\n            <Weather weather_description={this.state.weather_description}\n                     weather_temperature={this.state.weather_temperature}\n                     weather_pressure={this.state.weather_pressure}\n                     weather_humidity={this.state.weather_humidity}\n                     weather_clouds={this.state.weather_clouds}\n                     weather_wind_speed={this.state.weather_wind_speed}\n                     weather_wind_degree={this.state.weather_wind_degree}\n                     weather_sunrise={this.state.weather_sunrise}\n                     weather_sunset={this.state.weather_sunset} />\n          </main>\n        </div>\n        <Footer />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}